// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travel.Context.Models.Travel;

namespace Travel.Context.Migrations
{
    [DbContext(typeof(TravelContext))]
    [Migration("20221217064551_initnitnit")]
    partial class initnitnit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Travel.Context.Models.Banner", b =>
                {
                    b.Property<Guid>("IdBanner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NameBanner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("IdBanner");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("Travel.Context.Models.Car", b =>
                {
                    b.Property<Guid>("IdCar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AmountSeat")
                        .HasColumnType("int");

                    b.Property<Guid>("IdUserModify")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LiscensePlate")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ModifyDate")
                        .HasColumnType("bigint");

                    b.Property<string>("NameDriver")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("IdCar");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Travel.Context.Models.Contract", b =>
                {
                    b.Property<Guid>("IdContract")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint");

                    b.Property<long>("ExpDate")
                        .HasColumnType("bigint");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("ModifyDate")
                        .HasColumnType("bigint");

                    b.Property<string>("NameContract")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("SignDate")
                        .HasColumnType("bigint");

                    b.Property<string>("TypeService")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdContract");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Travel.Context.Models.CostTour", b =>
                {
                    b.Property<string>("IdSchedule")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Approve")
                        .HasColumnType("int");

                    b.Property<float>("Breakfast")
                        .HasColumnType("real");

                    b.Property<int>("CusExpected")
                        .HasColumnType("int");

                    b.Property<float>("Depreciation")
                        .HasColumnType("real");

                    b.Property<float>("Distance")
                        .HasColumnType("real");

                    b.Property<float>("FeeGas")
                        .HasColumnType("real");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("InsuranceFee")
                        .HasColumnType("real");

                    b.Property<bool>("IsHoliday")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTempData")
                        .HasColumnType("bit");

                    b.Property<float>("OtherPrice")
                        .HasColumnType("real");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("PriceHotelDB")
                        .HasColumnType("real");

                    b.Property<float>("PriceHotelSR")
                        .HasColumnType("real");

                    b.Property<float>("PriceRestaurant")
                        .HasColumnType("real");

                    b.Property<float>("PriceTicketPlace")
                        .HasColumnType("real");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("SellCost")
                        .HasColumnType("real");

                    b.Property<float>("Tolls")
                        .HasColumnType("real");

                    b.Property<float>("TotalCostTourNotService")
                        .HasColumnType("real");

                    b.Property<string>("TypeAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Water")
                        .HasColumnType("real");

                    b.HasKey("IdSchedule");

                    b.HasIndex("HotelId");

                    b.HasIndex("PlaceId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("CostTours");
                });

            modelBuilder.Entity("Travel.Context.Models.Customer", b =>
                {
                    b.Property<Guid>("IdCustomer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccessToken")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("Birthday")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FbToken")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("GoogleToken")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsBlackList")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsBlock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Legit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("NameCustomer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Phone")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int>("Point")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<long>("TimeBlock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.HasKey("IdCustomer");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Travel.Context.Models.District", b =>
                {
                    b.Property<Guid>("IdDistrict")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameDistrict")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdDistrict");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("Travel.Context.Models.Employee", b =>
                {
                    b.Property<Guid>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccessToken")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("Birthday")
                        .HasColumnType("bigint");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("ModifyDate")
                        .HasColumnType("bigint");

                    b.Property<string>("NameEmployee")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<long>("TimeBlock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.HasKey("IdEmployee");

                    b.HasIndex("RoleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Travel.Context.Models.File", b =>
                {
                    b.Property<Guid>("IdFile")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileExtension")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.Property<string>("NameFile")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdFile");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Travel.Context.Models.Hotel", b =>
                {
                    b.Property<Guid>("IdHotel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Approve")
                        .HasColumnType("int");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("DoubleRoomPrice")
                        .HasColumnType("real");

                    b.Property<string>("IdAction")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("IdUserModify")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTempdata")
                        .HasColumnType("bit");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("ModifyDate")
                        .HasColumnType("bigint");

                    b.Property<string>("NameHotel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("QuantityDBR")
                        .HasColumnType("int");

                    b.Property<int>("QuantitySR")
                        .HasColumnType("int");

                    b.Property<float>("SingleRoomPrice")
                        .HasColumnType("real");

                    b.Property<int>("Star")
                        .HasColumnType("int");

                    b.Property<string>("TypeAction")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("WardId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdHotel");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("Travel.Context.Models.Image", b =>
                {
                    b.Property<Guid>("IdImage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extension")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IdService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NameImage")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("TypeAction")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdImage");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Travel.Context.Models.Place", b =>
                {
                    b.Property<Guid>("IdPlace")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Approve")
                        .HasColumnType("int");

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdAction")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("IdUserModify")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTempdata")
                        .HasColumnType("bit");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("ModifyDate")
                        .HasColumnType("bigint");

                    b.Property<string>("NamePlace")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<float>("PriceTicket")
                        .HasColumnType("real");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeAction")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("WardId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdPlace");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("Travel.Context.Models.Promotion", b =>
                {
                    b.Property<int>("IdPromotion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Approve")
                        .HasColumnType("int");

                    b.Property<long>("FromDate")
                        .HasColumnType("bigint");

                    b.Property<string>("IdAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdUserModify")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTempdata")
                        .HasColumnType("bit");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ModifyDate")
                        .HasColumnType("bigint");

                    b.Property<long>("ToDate")
                        .HasColumnType("bigint");

                    b.Property<string>("TypeAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("IdPromotion");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("Travel.Context.Models.Province", b =>
                {
                    b.Property<Guid>("IdProvince")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameProvince")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdProvince");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("Travel.Context.Models.Restaurant", b =>
                {
                    b.Property<Guid>("IdRestaurant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Approve")
                        .HasColumnType("int");

                    b.Property<float>("ComboPrice")
                        .HasColumnType("real");

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdAction")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("IdUserModify")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTempdata")
                        .HasColumnType("bit");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("ModifyDate")
                        .HasColumnType("bigint");

                    b.Property<string>("NameRestaurant")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeAction")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("WardId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdRestaurant");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("Travel.Context.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCustomer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdTour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasMaxLength(12)
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("Travel.Context.Models.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NameRole")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdRole");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Travel.Context.Models.Schedule", b =>
                {
                    b.Property<string>("IdSchedule")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("AdditionalPrice")
                        .HasColumnType("real");

                    b.Property<float>("AdditionalPriceHoliday")
                        .HasColumnType("real");

                    b.Property<string>("Alias")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Approve")
                        .HasColumnType("int");

                    b.Property<long>("BeginDate")
                        .HasColumnType("bigint");

                    b.Property<Guid>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("DepartureDate")
                        .HasColumnType("bigint");

                    b.Property<string>("DeparturePlace")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("EndDate")
                        .HasColumnType("bigint");

                    b.Property<float>("FinalPrice")
                        .HasColumnType("real");

                    b.Property<float>("FinalPriceHoliday")
                        .HasColumnType("real");

                    b.Property<string>("IdAction")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("IdUserModify")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsHoliday")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTempData")
                        .HasColumnType("bit");

                    b.Property<bool>("Isdelete")
                        .HasColumnType("bit");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("MetaDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinCapacity")
                        .HasColumnType("int");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ModifyDate")
                        .HasColumnType("bigint");

                    b.Property<float>("PriceAdult")
                        .HasColumnType("real");

                    b.Property<float>("PriceAdultHoliday")
                        .HasColumnType("real");

                    b.Property<float>("PriceBaby")
                        .HasColumnType("real");

                    b.Property<float>("PriceBabyHoliday")
                        .HasColumnType("real");

                    b.Property<float>("PriceChild")
                        .HasColumnType("real");

                    b.Property<float>("PriceChildHoliday")
                        .HasColumnType("real");

                    b.Property<int>("Profit")
                        .HasColumnType("int");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityAdult")
                        .HasColumnType("int");

                    b.Property<int>("QuantityBaby")
                        .HasColumnType("int");

                    b.Property<int>("QuantityChild")
                        .HasColumnType("int");

                    b.Property<int>("QuantityCustomer")
                        .HasColumnType("int");

                    b.Property<long>("ReturnDate")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("TimePromotion")
                        .HasColumnType("bigint");

                    b.Property<float>("TotalCostTour")
                        .HasColumnType("real");

                    b.Property<float>("TotalCostTourNotService")
                        .HasColumnType("real");

                    b.Property<string>("TourId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TypeAction")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<float>("Vat")
                        .HasColumnType("real");

                    b.HasKey("IdSchedule");

                    b.HasIndex("CarId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PromotionId");

                    b.HasIndex("TourId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Travel.Context.Models.Timeline", b =>
                {
                    b.Property<Guid>("IdTimeline")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<long>("FromTime")
                        .HasColumnType("bigint");

                    b.Property<string>("IdSchedule")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("ModifyDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("ToTime")
                        .HasColumnType("bigint");

                    b.HasKey("IdTimeline");

                    b.HasIndex("IdSchedule");

                    b.ToTable("Timelines");
                });

            modelBuilder.Entity("Travel.Context.Models.Tour", b =>
                {
                    b.Property<string>("IdTour")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Alias")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ApproveStatus")
                        .HasColumnType("int");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint");

                    b.Property<string>("IdAction")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("IdUserModify")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTempdata")
                        .HasColumnType("bit");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("ModifyDate")
                        .HasColumnType("bigint");

                    b.Property<string>("NameTour")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NameTour_EN")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("QuantityBooked")
                        .HasColumnType("int");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Thumbnail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ToPlace")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TypeAction")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdTour");

                    b.ToTable("Tour");
                });

            modelBuilder.Entity("Travel.Context.Models.Travel.Customer_Voucher", b =>
                {
                    b.Property<Guid>("IdCustomer_Voucher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdCustomer_Voucher");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VoucherId");

                    b.ToTable("Customer_Vouchers");
                });

            modelBuilder.Entity("Travel.Context.Models.Travel.Logs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassContent")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreationDate")
                        .HasColumnType("bigint");

                    b.Property<string>("EmailCreator")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Travel.Context.Models.Travel.OTP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BeginTime")
                        .HasColumnType("bigint");

                    b.Property<long>("EndTime")
                        .HasColumnType("bigint");

                    b.Property<string>("OTPCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("OTP");
                });

            modelBuilder.Entity("Travel.Context.Models.Travel.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpriedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("JwtId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RefToken")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Travel.Context.Models.Voucher", b =>
                {
                    b.Property<Guid>("IdVoucher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long>("EndDate")
                        .HasColumnType("bigint");

                    b.Property<long>("StartDate")
                        .HasColumnType("bigint");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("IdVoucher");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("Travel.Context.Models.Ward", b =>
                {
                    b.Property<Guid>("IdWard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameWard")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdWard");

                    b.HasIndex("DistrictId");

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("Travel.Context.Models.CostTour", b =>
                {
                    b.HasOne("Travel.Context.Models.Hotel", "Hotel")
                        .WithMany("CostTours")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Travel.Context.Models.Schedule", "Schedule")
                        .WithOne("CostTour")
                        .HasForeignKey("Travel.Context.Models.CostTour", "IdSchedule")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Travel.Context.Models.Place", "Place")
                        .WithMany("CostTours")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Travel.Context.Models.Restaurant", "Restaurant")
                        .WithMany("CostTours")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("Place");

                    b.Navigation("Restaurant");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Travel.Context.Models.District", b =>
                {
                    b.HasOne("Travel.Context.Models.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Travel.Context.Models.Employee", b =>
                {
                    b.HasOne("Travel.Context.Models.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Travel.Context.Models.Schedule", b =>
                {
                    b.HasOne("Travel.Context.Models.Car", "Car")
                        .WithMany("Schedules")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Travel.Context.Models.Employee", "Employee")
                        .WithMany("Schedules")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Travel.Context.Models.Promotion", "Promotions")
                        .WithMany("Schedules")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Travel.Context.Models.Tour", "Tour")
                        .WithMany("Schedules")
                        .HasForeignKey("TourId");

                    b.Navigation("Car");

                    b.Navigation("Employee");

                    b.Navigation("Promotions");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("Travel.Context.Models.Timeline", b =>
                {
                    b.HasOne("Travel.Context.Models.Schedule", "Schedule")
                        .WithMany("Timelines")
                        .HasForeignKey("IdSchedule");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Travel.Context.Models.Travel.Customer_Voucher", b =>
                {
                    b.HasOne("Travel.Context.Models.Customer", "customer")
                        .WithMany("Customer_Vouchers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Travel.Context.Models.Voucher", "voucher")
                        .WithMany("Vouchers_Customer")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");

                    b.Navigation("voucher");
                });

            modelBuilder.Entity("Travel.Context.Models.Ward", b =>
                {
                    b.HasOne("Travel.Context.Models.District", "District")
                        .WithMany("Ward")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("Travel.Context.Models.Car", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Travel.Context.Models.Customer", b =>
                {
                    b.Navigation("Customer_Vouchers");
                });

            modelBuilder.Entity("Travel.Context.Models.District", b =>
                {
                    b.Navigation("Ward");
                });

            modelBuilder.Entity("Travel.Context.Models.Employee", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Travel.Context.Models.Hotel", b =>
                {
                    b.Navigation("CostTours");
                });

            modelBuilder.Entity("Travel.Context.Models.Place", b =>
                {
                    b.Navigation("CostTours");
                });

            modelBuilder.Entity("Travel.Context.Models.Promotion", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Travel.Context.Models.Province", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("Travel.Context.Models.Restaurant", b =>
                {
                    b.Navigation("CostTours");
                });

            modelBuilder.Entity("Travel.Context.Models.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Travel.Context.Models.Schedule", b =>
                {
                    b.Navigation("CostTour");

                    b.Navigation("Timelines");
                });

            modelBuilder.Entity("Travel.Context.Models.Tour", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Travel.Context.Models.Voucher", b =>
                {
                    b.Navigation("Vouchers_Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
